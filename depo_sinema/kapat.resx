<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAGACoDAAAFgAAACgAAAAgAAAAQAAAAAEAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAvM1YdIUQgJUwpLlUCCDEkKlMiKlIuN10wOV8AAygaJkguOlwwPGAnM1cbJkwHEzceJ0wkLlAfKkoH
        EjIHEjASHTsaJ0cRHT8ACzEbJU0GDDkLET4lK1gUGkcoL1oyOWQAAicAAicABy4LEzsABCwAACoNFkEA
        BzIAACYACC4ACjAABy0AACgABi4NGUMABC4AAioACS8FDjMABSkABykACCoACi4AAykABy8EDTgABDAA
        Ai8DCTgABTIFCzgDCjUZJEoMGT8EEDgFETsAAy8aJ1MdKlgADjwTIlAdLFoGFUMPH00SIlEEFEMOHU4O
        HE0QGkoOGEcUHUkQG0cTHEcIFD4IFD4IEz8LFUQABzYGED8KEkEHDj8fJ1YmLl0jLFgQHEQVIUkeKlQF
        EDwbKFYXI1MHFUUbKVoEEkMUIVUVI1cKGE0SIFUSH1cKFlARHFYRGlMLFUsRGU4RHE4XIFIOGEgTHU0X
        IVEVH08FDz8XIFIeKFgPFkgfJlcZIFERGEkQGUQHEDwLFEADCzoQF0gQF0kZIVYQF04LEkkQF1AfJ2IH
        D0sUG1ohJ2gaIGEYHl8TGlkQGlYYIFwXIlwdJl8WIFYXIVcXIlYgK18UH1EVIFQaJVcNFUoWH1EbJFYf
        KFoOFUYUG0wTGksXHk8PFkgdI1gSF04XHlciJmEPFFEVGlkSGFkgI2cSGFsYHWIUGV4THF8THV0WIGAR
        HFoTHloNGVMOGVMJFE0IFEoIFUkHFEgLGEwGEEYBC0EBC0EBC0EYIlgUH1MfKl4jLmIpMWYrMmkpMGcw
        OXIuNG8wOHQ1O3wzO34yOHslLHEyOX4rNHgoNngkNXQkNXQeL24jMnAfLmwkMm0hL2kgL2ccLGEaKl8T
        I1gSIVkTIloQHlgIFlAGDj2OlsWLlMCOl8KLkr2VnMeRmMONlL+SlsaMkcKIjL+GjMGJjcKGjMF/hbp4
        gLV0f7Fvfa5vfa5qdadqdadkbp5ibJtdaJRXYo5PW4VXYItEUHpBTHg+SHcsNmYRGkwSFTHw9P/2+P/2
        +f/4+v/4+//4+//3+v/6+f/4+f/4+f/2+P/4+P/2+P/2+f/2+f/2+v/4+f/4+f/4+f/39f7k4fzg3vz5
        9/76+P/7+v/8+f/7+f/69//79v+8t9QOCCcXGCz29v/5+v/7/P/7/v/9//9GRu8iIu0iIuwsLO1XV/C1
        tfj9/f/7/v/7/v+KjPU4OO7//v/n5vxiYfElJew4OO44OO42Nu6trPf//f///P///P//+///+f/Euc0W
        CiAWGDDy9f/3+v/6/P/6///7//9FRu+0tff6/P7p6vysrfc6O+6PkfX6///6//6wsvZ4efL9//7Oz/p9
        ffPi4vz//f///f/U0/sxMe3Ly/r//f///f//+///+f+/us8SDCMYGTP19v/5+f/6/P/7///9//5GRu61
        tfb///7//////v/c3fsnJ+ze4fv7//z7//v7//v7//v9//79/////v///v///v////9ZWfGUlPT+/v79
        /v/9/P/7+v++vNARDicfGjX49f/7+P/9/P////////tGRu61tfX///7//v///f///v9TU/CdnfX///z/
        //v9//n9//v9//79/////v/u7P3Ew/mGhvQkJOzGxvb9/vr9///7/f/6+/++vdESEyghHDf59v/7+P/9
        /f////////pGRu61tfX///7//v///f///f9kZPGMjPX///7///v///v9//z9///KyvpPT/AiIu0uLu1d
        XfG7u/b///v7//r7///6/v/4/P+8vtAUFSodHjj29//3+P/6/v/9//78//pGRu61tfX///7//v///f//
        /f9FRe+mpvf9///9//79//79//749/4xMe1/fvTf3fv//f////////z///v7//r7///6/v/4/P+9v9EU
        FywcIDn09//1+P/6/f/7///8//tGRu61tfb///7//v///v+zsvgsLO3q7P39///9//79//7///7n5vwi
        Iu3p6Pz//f///v////////z8/Pr7//r7///6/v/4/P+7v9EVGC0fITnz9//3+v/6/P/9/v/7+/tGRu+O
        jvO/wPatrfZtbvErK+26uvj9/vz7/Pr+//v///z+//v+//1SUu9sbPLQ0Pnb2/izs/ZaWvDb2vb///77
        +v77/f/5+v+9vtIbHjMgIzj29//6+v/6+v/9+v///v96evNfX/FhYfFtbfKSk/Xh4vz///7///7///7/
        //7///z///z///7s7vyEhfNKS+5DQ+5cXPCTk/P09Pz//v/7+f/6+v/6+v/BxdgYGzAdHTX4+f/7+f/9
        +v//+////f/9+Pr////////////+/f/+/f///f/++/3/+/z//v77+vz8/v/9/v/7/v/7/v/7///7///9
        ///6/P36/P39+//9/P/6+//2+P/Aw9gUGDAgITbz9P/6+f/9+//59v///f///v/7+Pr//v/8/v/9/v/9
        /v///v///v///v///P7//v/9/v/8/P/3+v/2+f74+//7/v/9/v/9/v/9/f/69//9/P/6+v/4+f/Ext4W
        GjIcIDL2+//09f/7/P/9/f/5+Pr7+vz9///8/v/2+vv4+//7/v/8/v/9/////v/+/f/9/P///f///P/9
        /P/9/P/9/P/8+//39/349vz//f//+///+//7+//4+P+8vdIXGi8OFyvm7f/z+v/r8P/w8v3v8fvu8fnx
        9Pzp7vfj6PHh5/Le5O/W2+TV2uPY2uTQ0tzOz93Ky9nCwtK3usmytcSsscCkqbieobCYmaeTlKKCgpJ+
        fpBwdIdpbYVZXncPFjEGEDILFjYAAB4RGTYTGDEWHDMVGzIJDyYHDicIEioWHzobJD8XHjkaITwiJ0Ad
        IjsoME0jLkoaJUMSID0WI0MgLU0mNFEoNlMrN1MiLUkVIDwXIkANGjoADzABETUADDECEzoPIEcTI0gY
        JkogLU0mM1MQGzsRHj4OHT4TJEUlM1cmNFgUIkYNGT0OGDoFDzELGT0WJkojNVotQGY0R200SW8vRGoo
        O2AyRGkxRGcmOVwoOl8vQmcqP2UaMFkRJ1BqhKyEnsOQp82OpMh5j7JlfJw7T3JIXoFMZIhkfqN1i7Rk
        eqM8U3kxRmwxRGlCVXhcb5J7jrGKncJ6j7VUapM7UXoxR3AoPmc5TnRWaY5abZJabZJbcZVNZIo1THIV
        L1TZ7//T6f/T6P+nu9onO1oeM08wRGNRZIWcsNPG3P/d8//D1vuSpslKXX4DFDUwP19TYX6zw+Dg7//c
        7//Z7P/c7/+LnsMnO14AAycVJkdHVnaSocHW6P/k+P/S5v+wxeS0u9RBRl8KECcRFisBBhsABRoAAxsA
        Bh0RGDGTmrWZn7wlLEcJDicVGTEEBh4AAxgABRgABhkABxtmcYdtd48OGTQACCMFESkAARoABRwAARUA
        BBcBCx0IFCYlMUM/S10AARUAARUQECIGBhYLCxsHBxcDAxUAABEAAhessca1t88AAhoAABQeHTEODB8i
        IjAFBhQFCBYHDBsABBViaX2Ei58FCyIAARUDCRwDBxkCBRQBBBIAAxAAAAsABRIEDBkAAxYAARQBCBkJ
        ECEAAhMABRYAAxYBCBsCCx+Un7Vsc4wAABYDCh4LESQNESMLDhwBAhAAAAsCBxYABhksMknO1u2Ok6wA
        Bh0ABBkGCh0MDiAHChkABhMBBxQACBUABxQABxgAARIAAA8AAA8AAAsAARAABRYAABEACR0MFSkAAxoA
        BRkAAA8ABBUAAhEAAw4ICRMAAQwFCBYAABIBBhsUGjElKUEJDSUAABUBAhYMDB4ICBgDBBIDBxIAAQwA
        AAgDBRALDRgPDxsCAg4JCRUAAAsFBRMGBxWPkaPX2+1laXsAABEDAxMWFiINDBYTEBkFAwkPDBUAAAcE
        BRMAARNSU2dTVGlQUWUHBxkAAA0GAxIGBBACAQsCAw0DBA4HCBIEAw0IBxEAAAcHAw4AAAcHAw4EAg4F
        BREPDh4JCRkGBhYBAhAIBRQAAAkKBQ4FAQcHAQYGAggKBxACAg4DAhIBARMaGS20tMYyLkEMCRgIARAP
        CRQSDhkQDRYCAQoBAAkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
</root>